{"version":3,"sources":["components/NavBar/NavBar.jsx","components/CardItem/CardItem.jsx","components/CardsContainer/CardsContainer.jsx","components/Chart/Chart.jsx","api/index.js","components/CountrySelector/CountrySelector.jsx","components/TablesContainer/TablesContainer.jsx","App.js","index.js","components/CardItem/CardItem.module.css","components/CardsContainer/CardsContainer.module.css","components/Chart/Chart.module.css"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","HideOnScroll","props","trigger","useScrollTrigger","target","window","undefined","Slide","appear","direction","in","children","NavBar","classes","className","AppBar","Toolbar","Typography","variant","align","Button","color","href","CardItem","cardName","cardNameColor","value","total","lastUpdate","Grid","styles","card","item","component","Card","md","xs","CardHeader","CardContent","gutterBottom","duration","start","end","separator","Fragment","decimals","Date","toDateString","CardsContainer","data","confirmed","recovered","deaths","container","justify","CircularProgress","Chart","country","bar","mx","labels","datasets","label","backgroundColor","options","legend","display","getCountries","a","axios","get","countries","map","c","name","getData","address","getTableData","id","CountrySelector","handleCountryChange","useState","getedCountries","setGetedCountries","useEffect","FormControl","margin","InputLabel","shrink","htmlFor","NativeSelect","defaultValue","onChange","e","inputProps","i","StyledTableCell","withStyles","head","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","table","minWidth","TablesContainer","getedTableData","setGetedTableData","createData","rows","cases","TableContainer","Table","style","width","aria-label","TableHead","TableBody","row","scope","App","state","getedData","setState","this","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.71c5ab79.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Slide,\n  useScrollTrigger,\n  Button,\n} from \"@material-ui/core/\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction HideOnScroll(props) {\n  const trigger = useScrollTrigger({\n    target: props.window ? window() : undefined,\n  });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {props.children}\n    </Slide>\n  );\n}\n\nexport default function NavBar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <HideOnScroll {...props}>\n        <AppBar>\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title} align=\"center\">\n              COVID-19 TRACKER\n            </Typography>\n            <Button\n              color=\"inherit\"\n              target=\"_blank\"\n              href=\"https://covid19.mathdro.id/api\"\n            >\n              API 1\n            </Button>\n            <Button\n              color=\"inherit\"\n              target=\"_blank\"\n              href=\"https://disease.sh/v3/covid-19/countries?sort=cases\"\n            >\n              API 2\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport styles from \"./CardItem.module.css\";\n\nconst CardItem = ({\n  className,\n  cardName,\n  cardNameColor,\n  value,\n  total,\n  lastUpdate,\n}) => (\n  <Grid\n    className={`${styles.card} ${styles[className]}`}\n    item\n    component={Card}\n    md={3}\n    xs={12}\n    align=\"center\"\n  >\n    <CardHeader className={styles[cardNameColor]} title={cardName}></CardHeader>\n    <CardContent>\n      <Typography variant=\"h5\" component=\"p\" color=\"textPrimary\" gutterBottom>\n        <CountUp duration={2} start={0} end={value} separator=\",\" />\n        {total && (\n          <React.Fragment>\n            {\" \"}\n            (\n            <CountUp\n              duration={2}\n              start={0}\n              end={(value / total) * 100}\n              decimals={2}\n            ></CountUp>\n            %)\n          </React.Fragment>\n        )}\n      </Typography>\n      <Typography variant=\"h5\" component=\"p\" color=\"textSecondary\">\n        Date: {new Date(lastUpdate).toDateString()}\n      </Typography>\n    </CardContent>\n  </Grid>\n);\n\nexport default CardItem;\n","import React from \"react\";\n\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport CardItem from \"../CardItem/CardItem\";\nimport styles from \"./CardsContainer.module.css\";\n\nconst CardsContainer = ({\n  data: { confirmed, recovered, deaths, lastUpdate },\n}) => {\n  if (!deaths) return <CircularProgress />;\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={4} justify=\"center\">\n        <CardItem\n          className=\"confirmed\"\n          cardName=\"Confirmed\"\n          cardNameColor=\"blue\"\n          value={confirmed.value}\n          lastUpdate={lastUpdate}\n        />\n        <CardItem\n          className=\"recovered\"\n          cardName=\"Recovered\"\n          cardNameColor=\"green\"\n          value={recovered.value}\n          total={confirmed.value}\n          lastUpdate={lastUpdate}\n        />\n        <CardItem\n          className=\"deaths\"\n          cardName=\"Deaths\"\n          cardNameColor=\"red\"\n          value={deaths.value}\n          total={confirmed.value}\n          lastUpdate={lastUpdate}\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default CardsContainer;\n","import React from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ country, data: { confirmed, recovered, deaths } }) => {\n  const bar = deaths ? (\n    <Grid container mx=\"auto\">\n      <Bar\n        mx=\"auto\"\n        data={{\n          labels: [\"Confirmed\", \"Recovered\", \"Deaths\"],\n          datasets: [\n            {\n              label: \"Number\",\n              backgroundColor: [\n                \"rgba(0, 0, 255, 0.8)\",\n                \"rgba(0, 255, 0, 0.8)\",\n                \"rgba(255, 0, 0, 0.8)\",\n              ],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n        }}\n      />\n    </Grid>\n  ) : null;\n\n  return <div className={styles.container}>{country && bar}</div>;\n};\n\nexport default Chart;\n","import axios from \"axios\";\n\nexport const getCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`https://covid19.mathdro.id/api/countries`);\n\n    return countries.map((c) => c.name);\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getData = async (country) => {\n  let address = \"https://covid19.mathdro.id/api\";\n\n  try {\n    if (country) {\n      address = `${address}/countries/${country}`;\n    }\n\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(address);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getTableData = async (id) => {\n  try {\n    const data = await axios.get(\n      \"https://disease.sh/v3/covid-19/countries?sort=cases\"\n    );\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { Grid, FormControl, NativeSelect, InputLabel } from \"@material-ui/core\";\nimport { getCountries } from \"../../api\";\n\nconst CountrySelector = ({ handleCountryChange }) => {\n  const [getedCountries, setGetedCountries] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      setGetedCountries(await getCountries());\n    };\n\n    getData();\n  }, [setGetedCountries]);\n\n  return (\n    <Grid container justify=\"center\">\n      <FormControl margin=\"normal\">\n        <InputLabel shrink htmlFor=\"country-select\">\n          Select a country.\n        </InputLabel>\n        <NativeSelect\n          defaultValue=\"\"\n          onChange={(e) => handleCountryChange(e.target.value)}\n          inputProps={{ id: \"country-select\" }}\n        >\n          <option value=\"\">World</option>\n          {getedCountries.map((country, i) => (\n            <option key={i} value={country}>\n              {country}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </Grid>\n  );\n};\n\nexport default CountrySelector;\n","import React, { useState, useEffect } from \"react\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport { getTableData } from \"../../api\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function TablesContainer() {\n  const classes = useStyles();\n\n  const [getedTableData, setGetedTableData] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      setGetedTableData(await getTableData());\n    };\n\n    getData();\n  }, [setGetedTableData]);\n\n  function createData(name, confirmed, recovered, deaths) {\n    return { name, confirmed, recovered, deaths };\n  }\n\n  let rows = [createData(\"Loading\")];\n\n  if (!getedTableData.data) return <CircularProgress />;\n  else {\n    rows = [\n      createData(\n        getedTableData.data[0].country,\n        getedTableData.data[0].cases,\n        getedTableData.data[0].recovered,\n        getedTableData.data[0].deaths\n      ),\n      createData(\n        getedTableData.data[1].country,\n        getedTableData.data[1].cases,\n        getedTableData.data[1].recovered,\n        getedTableData.data[1].deaths\n      ),\n      createData(\n        getedTableData.data[2].country,\n        getedTableData.data[2].cases,\n        getedTableData.data[2].recovered,\n        getedTableData.data[2].deaths\n      ),\n      createData(\n        getedTableData.data[3].country,\n        getedTableData.data[3].cases,\n        getedTableData.data[3].recovered,\n        getedTableData.data[3].deaths\n      ),\n      createData(\n        getedTableData.data[4].country,\n        getedTableData.data[4].cases,\n        getedTableData.data[4].recovered,\n        getedTableData.data[4].deaths\n      ),\n    ];\n  }\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        TOP 5 COUNTRIES\n      </Typography>\n      <TableContainer>\n        <Table\n          style={{ width: \"25%\" }}\n          className={classes.table}\n          aria-label=\"customized table\"\n          align=\"center\"\n        >\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">Country</StyledTableCell>\n              <StyledTableCell align=\"center\">Confirmed</StyledTableCell>\n              <StyledTableCell align=\"center\">Recovered</StyledTableCell>\n              <StyledTableCell align=\"center\">Deaths</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <StyledTableRow key={row.name}>\n                <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {row.name}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  <CountUp\n                    duration={2}\n                    start={0}\n                    end={row.confirmed}\n                    separator=\",\"\n                  />\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  <CountUp\n                    duration={2}\n                    start={0}\n                    end={row.recovered}\n                    separator=\",\"\n                  />\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  <CountUp\n                    duration={2}\n                    start={0}\n                    end={row.deaths}\n                    separator=\",\"\n                  />\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n  NavBar,\n  CardsContainer,\n  Chart,\n  CountrySelector,\n  TablesContainer,\n} from \"./components\";\nimport { getData } from \"./api\";\n\nclass App extends React.Component {\n  state = { data: {}, country: \"\" };\n\n  async componentDidMount() {\n    const getedData = await getData();\n    this.setState({ data: getedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const getedData = await getData(country);\n    this.setState({ data: getedData, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <React.Fragment>\n        <NavBar />\n        <CardsContainer data={data} />\n        <CountrySelector handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n        <TablesContainer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardItem_card__1j8Do\",\"confirmed\":\"CardItem_confirmed__1dbgo\",\"recovered\":\"CardItem_recovered__2e4F0\",\"deaths\":\"CardItem_deaths__3uXxP\",\"blue\":\"CardItem_blue__3AuIV\",\"green\":\"CardItem_green__21ed0\",\"red\":\"CardItem_red__2xm7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsContainer_container__sj1FW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};"],"sourceRoot":""}