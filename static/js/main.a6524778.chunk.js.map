{"version":3,"sources":["components/NavBar/NavBar.jsx","components/CardItem/CardItem.jsx","components/CardsContainer/CardsContainer.jsx","components/Chart/Chart.jsx","api/index.js","components/CountrySelector/CountrySelector.jsx","components/TablesContainer/TablesContainer.jsx","App.js","index.js","components/CardItem/CardItem.module.css","components/TablesContainer/TablesContainer.module.css","components/NavBar/NavBar.module.css","components/CardsContainer/CardsContainer.module.css"],"names":["HideOnScroll","props","trigger","useScrollTrigger","target","window","undefined","Slide","appear","direction","in","children","NavBar","AppBar","className","styles","navbar","Toolbar","Typography","variant","title","align","Button","color","href","rel","CardItem","cardName","cardNameColor","value","total","lastUpdate","Grid","card","item","component","Card","md","xs","Box","py","CardHeader","CardContent","gutterBottom","duration","start","end","separator","Fragment","decimals","Date","toDateString","CardsContainer","data","confirmed","recovered","deaths","mt","container","justify","CircularProgress","Chart","country","bar","pt","labels","datasets","label","backgroundColor","options","legend","display","mx","width","pb","getCountries","a","axios","get","countries","map","c","name","getData","address","getTableData","id","CountrySelector","handleCountryChange","useState","getedCountries","setGetedCountries","useEffect","FormControl","margin","InputLabel","shrink","htmlFor","NativeSelect","defaultValue","onChange","e","inputProps","i","StyledTableCell","withStyles","theme","head","fontSize","body","TableCell","StyledTableRow","root","palette","primary","dark","main","TableRow","TablesContainer","getedTableData","setGetedTableData","createData","flag","rows","countryInfo","cases","section","TableContainer","Table","table","aria-label","TableHead","TableBody","row","scope","img","src","alt","App","state","getedData","setState","this","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a6524778.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Slide,\n  useScrollTrigger,\n  Button,\n} from \"@material-ui/core/\";\nimport styles from \"./NavBar.module.css\";\n\nfunction HideOnScroll(props) {\n  const trigger = useScrollTrigger({\n    target: props.window ? window() : undefined,\n  });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {props.children}\n    </Slide>\n  );\n}\n\nexport default function NavBar(props) {\n  return (\n    <HideOnScroll {...props}>\n      <AppBar className={styles.navbar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={styles.title} align=\"center\">\n            COVID-19 TRACKER\n          </Typography>\n          <Button\n            color=\"inherit\"\n            target=\"_blank\"\n            href=\"https://covid19.mathdro.id/api\"\n            rel=\"noreferrer\"\n          >\n            API 1\n          </Button>\n          <Button\n            color=\"inherit\"\n            target=\"_blank\"\n            href=\"https://disease.sh/v3/covid-19/countries?sort=cases\"\n            rel=\"noreferrer\"\n          >\n            API 2\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </HideOnScroll>\n  );\n}\n","import React from \"react\";\n\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport styles from \"./CardItem.module.css\";\n\nconst CardItem = ({\n  className,\n  cardName,\n  cardNameColor,\n  value,\n  total,\n  lastUpdate,\n}) => (\n  <Grid\n    className={`${styles.card} ${styles[className]}`}\n    item\n    component={Card}\n    md={3}\n    xs={12}\n    align=\"center\"\n  >\n    <Box py=\"1rem\">\n      <CardHeader\n        className={styles[cardNameColor]}\n        title={cardName}\n      ></CardHeader>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"p\" color=\"textPrimary\" gutterBottom>\n          <CountUp duration={2} start={0} end={value} separator=\",\" />\n          {total && (\n            <React.Fragment>\n              {\" \"}\n              (\n              <CountUp\n                duration={2}\n                start={0}\n                end={(value / total) * 100}\n                decimals={2}\n              ></CountUp>\n              %)\n            </React.Fragment>\n          )}\n        </Typography>\n        <Typography variant=\"h5\" component=\"p\" color=\"textSecondary\">\n          Date: {new Date(lastUpdate).toDateString()}\n        </Typography>\n      </CardContent>\n    </Box>\n  </Grid>\n);\n\nexport default CardItem;\n","import React from \"react\";\n\nimport { Box, Typography, Grid, CircularProgress } from \"@material-ui/core\";\nimport CardItem from \"../CardItem/CardItem\";\nimport styles from \"./CardsContainer.module.css\";\n\nconst CardsContainer = ({\n  data: { confirmed, recovered, deaths, lastUpdate },\n}) => {\n  if (!deaths)\n    return (\n      <Grid container justify=\"center\">\n        <CircularProgress />\n      </Grid>\n    );\n\n  return (\n    <React.Fragment>\n      <Box mt=\"8rem\">\n        <Typography variant=\"h4\" align=\"center\">\n          COUNTRY INFORMATION\n        </Typography>\n      </Box>\n      <Box className={styles.container} py=\"2rem\">\n        <Grid container justify=\"center\">\n          <CardItem\n            className=\"confirmed\"\n            cardName=\"Confirmed\"\n            cardNameColor=\"blue\"\n            value={confirmed.value}\n            lastUpdate={lastUpdate}\n          />\n          <CardItem\n            className=\"recovered\"\n            cardName=\"Recovered\"\n            cardNameColor=\"green\"\n            value={recovered.value}\n            total={confirmed.value}\n            lastUpdate={lastUpdate}\n          />\n          <CardItem\n            className=\"deaths\"\n            cardName=\"Deaths\"\n            cardNameColor=\"red\"\n            value={deaths.value}\n            total={confirmed.value}\n            lastUpdate={lastUpdate}\n          />\n        </Grid>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default CardsContainer;\n","import React from \"react\";\n\nimport { Box, Typography } from \"@material-ui/core\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst Chart = ({ country, data: { confirmed, recovered, deaths } }) => {\n  const bar = deaths ? (\n    <Box pt=\"2rem\">\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        CHART\n      </Typography>\n      <Bar\n        data={{\n          labels: [\"Confirmed\", \"Recovered\", \"Deaths\"],\n          datasets: [\n            {\n              label: \"Number\",\n              backgroundColor: [\n                \"rgba(0, 0, 255, 0.8)\",\n                \"rgba(0, 255, 0, 0.8)\",\n                \"rgba(255, 0, 0, 0.8)\",\n              ],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n        }}\n      />\n    </Box>\n  ) : null;\n\n  return (\n    <Box mx=\"auto\" width=\"60%\" pb=\"4rem\">\n      {country && bar}\n    </Box>\n  );\n};\n\nexport default Chart;\n","import axios from \"axios\";\n\nexport const getCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`https://covid19.mathdro.id/api/countries`);\n\n    return countries.map((c) => c.name);\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getData = async (country) => {\n  let address = \"https://covid19.mathdro.id/api\";\n\n  try {\n    if (country) {\n      address = `${address}/countries/${country}`;\n    }\n\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(address);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getTableData = async (id) => {\n  try {\n    const data = await axios.get(\n      \"https://disease.sh/v3/covid-19/countries?sort=cases\"\n    );\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { Grid, FormControl, NativeSelect, InputLabel } from \"@material-ui/core\";\nimport { getCountries } from \"../../api\";\n\nconst CountrySelector = ({ handleCountryChange }) => {\n  const [getedCountries, setGetedCountries] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      setGetedCountries(await getCountries());\n    };\n\n    getData();\n  }, [setGetedCountries]);\n\n  return (\n    <Grid container justify=\"center\">\n      <FormControl margin=\"normal\">\n        <InputLabel shrink htmlFor=\"country-select\">\n          Select a country.\n        </InputLabel>\n        <NativeSelect\n          defaultValue=\"\"\n          onChange={(e) => handleCountryChange(e.target.value)}\n          inputProps={{ id: \"country-select\" }}\n        >\n          <option value=\"\">World</option>\n          {getedCountries.map((country, i) => (\n            <option key={i} value={country}>\n              {country}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </Grid>\n  );\n};\n\nexport default CountrySelector;\n","import React, { useState, useEffect } from \"react\";\n\nimport styles from \"./TablesContainer.module.css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport { getTableData } from \"../../api\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    color: \"whitesmoke\",\n    fontSize: 20,\n  },\n  body: {\n    color: \"whitesmoke\",\n    fontSize: 20,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.dark,\n\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}))(TableRow);\n\nexport default function TablesContainer() {\n  const [getedTableData, setGetedTableData] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      setGetedTableData(await getTableData());\n    };\n\n    getData();\n  }, [setGetedTableData]);\n\n  function createData(flag, name, confirmed, recovered, deaths) {\n    return { flag, name, confirmed, recovered, deaths };\n  }\n\n  let rows = [];\n\n  if (!getedTableData.data)\n    return (\n      <Grid container justify=\"center\">\n        <CircularProgress />\n      </Grid>\n    );\n  else {\n    rows = [\n      createData(\n        getedTableData.data[0].countryInfo.flag,\n        getedTableData.data[0].country,\n        getedTableData.data[0].cases,\n        getedTableData.data[0].recovered,\n        getedTableData.data[0].deaths\n      ),\n      createData(\n        getedTableData.data[1].countryInfo.flag,\n        getedTableData.data[1].country,\n        getedTableData.data[1].cases,\n        getedTableData.data[1].recovered,\n        getedTableData.data[1].deaths\n      ),\n      createData(\n        getedTableData.data[2].countryInfo.flag,\n        getedTableData.data[2].country,\n        getedTableData.data[2].cases,\n        getedTableData.data[2].recovered,\n        getedTableData.data[2].deaths\n      ),\n      createData(\n        getedTableData.data[3].countryInfo.flag,\n        getedTableData.data[3].country,\n        getedTableData.data[3].cases,\n        getedTableData.data[3].recovered,\n        getedTableData.data[3].deaths\n      ),\n      createData(\n        getedTableData.data[4].countryInfo.flag,\n        getedTableData.data[4].country,\n        getedTableData.data[4].cases,\n        getedTableData.data[4].recovered,\n        getedTableData.data[4].deaths\n      ),\n    ];\n  }\n\n  return (\n    <Box className={styles.section} py=\"4rem\">\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        TOP 5 COUNTRIES\n      </Typography>\n      <TableContainer>\n        <Table\n          className={styles.table}\n          aria-label=\"customized table\"\n          align=\"center\"\n        >\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">Country</StyledTableCell>\n              <StyledTableCell align=\"center\">Confirmed</StyledTableCell>\n              <StyledTableCell align=\"center\">Recovered</StyledTableCell>\n              <StyledTableCell align=\"center\">Deaths</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <StyledTableRow key={row.name}>\n                <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n                  <img\n                    className={styles.img}\n                    src={row.flag}\n                    alt={`${row.name} Flag`}\n                  />{\" \"}\n                  {row.name}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  <CountUp\n                    duration={2}\n                    start={0}\n                    end={row.confirmed}\n                    separator=\",\"\n                  />\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  <CountUp\n                    duration={2}\n                    start={0}\n                    end={row.recovered}\n                    separator=\",\"\n                  />\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  <CountUp\n                    duration={2}\n                    start={0}\n                    end={row.deaths}\n                    separator=\",\"\n                  />\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport {\n  NavBar,\n  CardsContainer,\n  Chart,\n  CountrySelector,\n  TablesContainer,\n} from \"./components\";\nimport { getData } from \"./api\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = { data: {}, country: \"\" };\n\n  async componentDidMount() {\n    const getedData = await getData();\n    this.setState({ data: getedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const getedData = await getData(country);\n    this.setState({ data: getedData, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <React.Fragment>\n        <NavBar />\n        <CardsContainer data={data} />\n        <CountrySelector handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n        <TablesContainer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardItem_card__1j8Do\",\"confirmed\":\"CardItem_confirmed__1dbgo\",\"recovered\":\"CardItem_recovered__2e4F0\",\"deaths\":\"CardItem_deaths__3uXxP\",\"blue\":\"CardItem_blue__3AuIV\",\"green\":\"CardItem_green__21ed0\",\"red\":\"CardItem_red__2xm7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"TablesContainer_section__7Nuse\",\"table\":\"TablesContainer_table__1pLEK\",\"img\":\"TablesContainer_img__16MFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"NavBar_title__3XrU0\",\"navbar\":\"NavBar_navbar__yNL3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsContainer_container__sj1FW\"};"],"sourceRoot":""}